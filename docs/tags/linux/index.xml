<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on ИТ заметки</title>
    <link>//sclif13.github.io/tags/linux/</link>
    <description>Recent content in linux on ИТ заметки</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Sun, 13 Sep 2015 08:41:19 +0000</lastBuildDate><atom:link href="//sclif13.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Asterisk WebRTC</title>
      <link>//sclif13.github.io/post/2015-09-13-docker-asterisk-webrtc/</link>
      <pubDate>Sun, 13 Sep 2015 08:41:19 +0000</pubDate>
      
      <guid>//sclif13.github.io/post/2015-09-13-docker-asterisk-webrtc/</guid>
      <description>После нескольких часов экспериментов я создал docker imageна основе Centos 6 и Asterisk 13.5.0. Вышел он довольно увесистый в 1.3 Гб. Собран с поддержкой WebRTC.
Как пользоваться?
Качаем готовый image c hub.docker.com:
docker pull sclif13/docker-asterisk13-webrtc Затем необходимо создать docker контейнер:
docker run -d -t --name=asterisk -p 5060:5060/udp \ -p 10000-10200:10000-10200/udp \ -p 8088:8088 \ -v /data/asterisk/etc:/etc/asterisk \ sclif13/docker-asterisk13-webrtc Указываем порты 5060 для SIP, 10000-10200 для RTP, 8088 для webrtc. Так же если необходимо вынести конфиги наружу указываем папку где они будут лежать в вашей системе(/data/asterisk/etc) и в самом docker контейнере (/etc/asterisk)</description>
    </item>
    
    <item>
      <title>Wireshark в docker</title>
      <link>//sclif13.github.io/post/2015-03-12-wireshark-%D0%B2-docker/</link>
      <pubDate>Thu, 12 Mar 2015 18:12:31 +0000</pubDate>
      
      <guid>//sclif13.github.io/post/2015-03-12-wireshark-%D0%B2-docker/</guid>
      <description>Не давно столкнулся с проблемой установки wireshark 1.12 из исходников на ubuntu desktop 14.04, а точнее был конфликт между библиотеками Xserver. Так как я по большой части использую wireshark для наглядного разбора, а статистику собираю через tcpdump, то решил создать wireshark в docker.
Dockerfile https://github.com/sclif13/docker-wireshark
Статья в помощь по запуску http://habrahabr.ru/post/240509/</description>
    </item>
    
    <item>
      <title>Вывод времени на английском на perl.</title>
      <link>//sclif13.github.io/post/2013-06-24-%D0%B2%D1%8B%D0%B2%D0%BE%D0%B4-%D0%B2%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%B8-%D0%BD%D0%B0-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B8%CC%86%D1%81%D0%BA%D0%BE%D0%BC-%D0%BD%D0%B0-perl/</link>
      <pubDate>Mon, 24 Jun 2013 06:52:40 +0000</pubDate>
      
      <guid>//sclif13.github.io/post/2013-06-24-%D0%B2%D1%8B%D0%B2%D0%BE%D0%B4-%D0%B2%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%B8-%D0%BD%D0%B0-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B8%CC%86%D1%81%D0%BA%D0%BE%D0%BC-%D0%BD%D0%B0-perl/</guid>
      <description>Появилась задача вывести время на английском в русской локали ru_RU.UTF-8.
Date: Mon, 24 Jun 2013 12:39:08 +0600
#!/usr/bin/perl use POSIX; setlocale(LC_TIME,&amp;quot;C&amp;quot;); print &amp;quot;Date: &amp;quot; . strftime(&amp;quot;%a, %d %b %Y %H:%M:%S %z&amp;quot;, localtime) . &amp;quot;\n&amp;quot;; </description>
    </item>
    
    <item>
      <title>Решено: USSD запрос в linux c помощью huawei e1550 (Мегафон)</title>
      <link>//sclif13.github.io/post/2013-03-07-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%BE-ussd-%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81-%D0%B2-linux-c-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-huawei-e1550-%D0%BC%D0%B5%D0%B3%D0%B0%D1%84%D0%BE%D0%BD/</link>
      <pubDate>Thu, 07 Mar 2013 06:48:25 +0000</pubDate>
      
      <guid>//sclif13.github.io/post/2013-03-07-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%BE-ussd-%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81-%D0%B2-linux-c-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-huawei-e1550-%D0%BC%D0%B5%D0%B3%D0%B0%D1%84%D0%BE%D0%BD/</guid>
      <description>Появилась необходимость контролировать баланс sim мегафона. Обычный ussd запрос *100# по каким-то причинам не захотел работать.
#/usr/bin/ussd.pl -vi \*111\*1*2#
#!/usr/bin/perluse Getopt::Std;use Device::Gsm::Pdu;use Text::Iconv;# defaults$opt_r = &amp;quot;/dev/ttyUSB2&amp;quot;;$opt_s = &amp;quot;/dev/ttyUSB0&amp;quot;;$conv = Text::Iconv-&amp;amp;gt;new(&#39;utf16be&#39;,&#39;utf8&#39;);my $USAGE = &amp;amp;lt;&amp;amp;lt;__EOU;Usage: $0 [-r input_port] [-s output_port] [-n] [-h] [-v] [-i] [-w] ussd_msgDescription:Send and receive 7-bit PDU-encoded USSD messages.Written and tested for Huawei E1550 GSM/UMTS USB modem.Options:-r port Port to receive data from.</description>
    </item>
    
    <item>
      <title>Решено: Net::SSH::Perl Can`t bind socket to port 1023</title>
      <link>//sclif13.github.io/post/2012-04-02-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%BE-netsshperl-cant-bind-socket-to-port-1023/</link>
      <pubDate>Mon, 02 Apr 2012 16:42:37 +0000</pubDate>
      
      <guid>//sclif13.github.io/post/2012-04-02-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%BE-netsshperl-cant-bind-socket-to-port-1023/</guid>
      <description>Собрался написать не большой скрипт, который на удаленном сервере через ssh добавляет или удаляет правила iptables.Написал тестовый скрипт.
use Net::SSH::Perl;my $host =&amp;quot;xx.xx.xx.xx&amp;quot;;my $user = &amp;quot;user&amp;quot;;my $pass = &amp;quot;paswd&amp;quot;;my $cmd = &amp;quot;uname -a&amp;quot;;my $ssh = Net::SSH::Perl-&amp;amp;gt;new ($host,protocol =&amp;amp;gt; 2,port =&amp;amp;gt; 22,debug =&amp;amp;gt; 1,);$ssh-&amp;amp;gt;login($user,$pass);my ($stdout, $stderr, $exit) = $ssh-&amp;amp;gt;cmd($cmd);print &amp;quot;$stdout&amp;quot;;Запустил один раз и он отработал нормально и сразу же второй раз.</description>
    </item>
    
  </channel>
</rss>
